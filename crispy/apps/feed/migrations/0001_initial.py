# Generated by Django 3.1.5 on 2021-01-21 21:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broken', models.BooleanField(db_index=True, default=False, help_text='Denotes whether this feed is broken or not', verbose_name='Broken')),
                ('error', models.TextField(blank=True, help_text='Error when a problem occurs', null=True, verbose_name='Error')),
                ('feed_url', models.TextField(help_text='URL of the RSS feed', unique=True, validators=[django.core.validators.URLValidator()], verbose_name='Feed URL')),
                ('type', models.CharField(choices=[('rss090', 'RSS 0.90'), ('rss090', 'RSS 0.90'), ('rss091n', 'Netscape RSS 0.91'), ('rss091u', 'Userland RSS 0.91'), ('rss10', 'RSS 1.0'), ('rss092', 'RSS 0.92'), ('rss093', 'RSS 0.93'), ('rss094', 'RSS 0.94'), ('rss20', 'RSS 2.0'), ('rss', 'RSS'), ('atom01', 'Atom 0.1'), ('atom02', 'Atom 0.2'), ('atom03', 'Atom 0.3'), ('atom10', 'Atom 1.0'), ('atom', 'Atom'), ('cdf', 'CDF'), ('', 'Unknown')], db_index=True, help_text='Type of the feed', max_length=30, verbose_name='Type')),
                ('etag', models.CharField(blank=True, help_text='E-Tag header', max_length=100, null=True, verbose_name='E-Tag')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date this feed has been added', verbose_name='Created at')),
                ('last_checked_at', models.DateTimeField(auto_now_add=True, help_text='Last time the feed has been checked', verbose_name='Last checked at')),
                ('last_updated_at', models.DateTimeField(blank=True, help_text='Last time the feed has been updated', null=True, verbose_name='Last updated at')),
                ('title', models.TextField(db_index=True, help_text='Title of the feed', verbose_name='Title')),
                ('alternate_title', models.TextField(blank=True, help_text='Alternate title for the feed', null=True, verbose_name='Alternate title')),
                ('site_url', models.TextField(blank=True, help_text="URL of the feed's website", null=True, validators=[django.core.validators.URLValidator()], verbose_name='Site URL')),
                ('extra_data', models.JSONField(db_index=True, null=True, verbose_name='Extra data')),
                ('added_by', models.ForeignKey(help_text='User who added this feed', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Added by')),
            ],
            options={
                'ordering': ('title', 'last_updated_at'),
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(help_text='Date this entry has been added')),
                ('title', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('author', models.TextField(blank=True, help_text='Author of this entry')),
                ('comments_url', models.TextField(blank=True, help_text='URL for HTML comment submission page', validators=[django.core.validators.URLValidator()])),
                ('url', models.TextField(blank=True, help_text='URL for the HTML for this entry', validators=[django.core.validators.URLValidator()])),
                ('guid', models.TextField(blank=True, help_text='GUID for the entry, according to the feed')),
                ('feed', models.ForeignKey(help_text='Feed this entry belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='feed.feed')),
            ],
            options={
                'verbose_name_plural': 'Entries',
                'ordering': ('-date',),
            },
        ),
    ]
